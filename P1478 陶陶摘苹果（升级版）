题目描述
又是一年秋季时，陶陶家的苹果树结了n个果子。陶陶又跑去摘苹果，这次她有一个a公分的椅子。当他手够不着时，他会站到椅子上再试试。

这次与NOIp2005普及组第一题不同的是：陶陶之前搬凳子，力气只剩下s了。当然，每次摘苹果时都要用一定的力气。陶陶想知道在s<0之前最多能摘到多少个苹果。

现在已知n个苹果到达地上的高度xi，椅子的高度a，陶陶手伸直的最大长度b，陶陶所剩的力气s，陶陶摘一个苹果需要的力气yi，求陶陶最多能摘到多少个苹果。

输入输出格式
输入格式：
第1行：两个数 苹果数n，力气s。

第2行：两个数 椅子的高度a，陶陶手伸直的最大长度b。

第3行~第3+n-1行：每行两个数 苹果高度xi，摘这个苹果需要的力气yi。

输出格式：
只有一个整数，表示陶陶最多能摘到的苹果数。

输入输出样例
输入样例#1： 
8 15
20 130
120 3
150 2
110 7
180 1
50 8
200 0
140 3
120 2
输出样例#1： 
4
说明
所有数据：n<=5000 a<=50 b<=200 s<=1000

      xi<=280  yi<=100


这是我的，然后过不了只有60分
#include<bits/stdc++.h>  
using namespace std;
int main()
{
	int n,s,a,b;
	int sum,ans=0,j=0;
	cin>>n>>s>>a>>b;
	int x[5001],y[5001],m[5001];
	memset(x,0,sizeof(x));
	memset(y,0,sizeof(y));
//	memset(m,0,sizeof(m));
	for(int i=0;i<n;i++)
	{
		cin>>x[i]>>y[i];
		if(x[i]<=(a+b))j++,m[j]=y[i];
			
	}
	sort(m,m+j);
	for(int i=1;i<=j;i++)
	{
		if(s>sum)
		{
			sum+=m[i];
			
			ans++;
		}
		
	}
	
	cout<<ans;
	return 0;
}


正确ac的，没想到冒泡可以xy一起排。
#include<iostream>
using namespace std;
int n,s,a,b,ans=0,t1,t2;
int x[5010],y[5010];

int main(){
    cin>>n>>s>>a>>b;
    a+=b;
    for(int i=1;i<=n;i++)
        cin>>x[i]>>y[i];
    for(int i=1;i<n;i++)
        for(int j=i+1;j<=n;j++){
            if(y[i]>y[j]){
                t1=x[i],t2=y[i];
                x[i]=x[j],y[i]=y[j];
                x[j]=t1,y[j]=t2;
            }
        }
    for(int i=1;i<=n;i++){
        if(x[i]<=a&&y[i]<=s){
            ans++;
            s-=y[i];
        }
    }
    cout<<ans;
    return 0;
}
