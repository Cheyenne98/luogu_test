https://www.luogu.org/problemnew/show/P1055
题目描述
每一本正式出版的图书都有一个ISBN号码与之对应，ISBN码包括99位数字、11位识别码和33位分隔符，其规定格式如x-xxx-xxxxx-x，其中符号-就是分隔符（键盘上的减号），最后一位是识别码，例如0-670-82162-4就是一个标准的ISBN码。ISBN码的首位数字表示书籍的出版语言，例如00代表英语；第一个分隔符-之后的三位数字代表出版社，例如670670代表维京出版社；第二个分隔符后的五位数字代表该书在该出版社的编号；最后一位为识别码。

识别码的计算方法如下：

首位数字乘以11加上次位数字乘以22……以此类推，用所得的结果 \bmod 11mod11，所得的余数即为识别码，如果余数为1010，则识别码为大写字母XX。例如ISBN号码0-670-82162-4中的识别码44是这样得到的：对067082162这99个数字，从左至右，分别乘以1,2,...,91,2,...,9再求和，即0×1+6×2+……+2×9=1580×1+6×2+……+2×9=158，然后取158 \bmod 11158mod11的结果44作为识别码。

你的任务是编写程序判断输入的ISBN号码中识别码是否正确，如果正确，则仅输出Right；如果错误，则输出你认为是正确的ISBN号码。

输入输出格式
输入格式：
一个字符序列，表示一本书的ISBN号码（保证输入符合ISBN号码的格式要求）。

输出格式：
一行，假如输入的ISBN号码的识别码正确，那么输出Right，否则，按照规定的格式，输出正确的ISBN号码（包括分隔符-）。

输入输出样例
输入样例#1： 
0-670-82162-4
输出样例#1： 
Right
输入样例#2： 
0-670-82162-0
输出样例#2： 
0-670-82162-4


#include<bits/stdc++.h>  
using namespace std;
int main()
{
	char a[14];
	char mod[12]="0123456789X";
	for(int i=0;i<13;i++)
	{
		cin>>a[i];
	}
	int x=0,t=1;

	for(int i=0;i<12;i++)
	{
		if(a[i]=='-')continue;
		x+=(a[i]-'0')*(t++);
			}
    
    if(mod[x%11]==a[12])cout<<"Right";
    else
    {
    	a[12]=mod[x%11];
    	for(int i=0;i<13;i++)
    	cout<<a[i];
    }
	return 0;
} 

/*好久没有做字符串的题了，有好几个的地方需要注意吧，*/
1.对于a[i]-'0'这个地方一开始忘记了
2.一开始赋值写的是int x,t=1;结果x也赋值为1了要注意啊啊啊啊啊
3.对于mod[12]这个我觉得好神奇啊，以后可以多用一下
